/*
 *     Copyright 2016 - 2017 Florian Spie√ü
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
   id 'com.github.johnrengelman.shadow' version '2.0.1'
   id 'maven-publish'
}

group 'club.minnced'
version '1.2'

apply plugin: 'java'



sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile 'net.java.dev.jna:jna:4.4.0'
}

wrapper {
    gradleVersion = '4.2.1'
}

// Publishing

task sources(type: Copy) {
    from 'src/main/java'
    into "$buildDir/sources"
}

classes.dependsOn sources

jar {
    baseName = project.name
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Target-Platforms': 'win32-x86-64, linux-x86-64, darwin'
    }

    dependsOn sources
}

javadoc {
    failOnError = false
    options.encoding = 'UTF-8'
    options.addStringOption('-html5') // jdk-9 docs

    dependsOn sources
    source = sources.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from "$buildDir/sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        MavenProject(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version version

            artifact javadocJar
            artifact sourcesJar
        }
    }
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourcesJar
    dependsOn shadowJar

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourcesJar.mustRunAfter javadocJar
    shadowJar.mustRunAfter sourcesJar
}
